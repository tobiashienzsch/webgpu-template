name: Build

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  HOMEBREW_NO_INSTALL_CLEANUP: 1
  VCPKG_FEATURE_FLAGS: dependencygraph

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    env:
      MACOSX_DEPLOYMENT_TARGET: ${{ matrix.osx_target }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Emscripten
            os: ubuntu-24.04
            vcpkg_triplet: "wasm32-emscripten"
            osx_target: ""

          - name: Linux
            os: ubuntu-24.04
            vcpkg_triplet: "x64-linux"
            osx_target: ""

          - name: macOS-X64
            os: macos-13
            vcpkg_triplet: "x64-osx"
            osx_target: "10.15"

          - name: macOS-ARM64
            os: macos-14
            vcpkg_triplet: "arm64-osx"
            osx_target: "11.0"

          - name: Windows
            os: windows-latest
            vcpkg_triplet: "x64-windows-static-md"
            osx_target: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: true

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt update -y
          sudo apt install -y libasound2-dev mesa-common-dev libx11-xcb-dev xorg-dev ninja-build pkg-config

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install ninja osxutils

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: choco install ninja

      - name: Install clang
        if: runner.os != 'macOS' && matrix.name != 'Emscripten'
        uses: egor-tensin/setup-clang@v1

      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh
          echo "VCPKG_ROOT=${{ github.workspace }}/vcpkg" >> $GITHUB_ENV
          echo "${{ github.workspace }}/vcpkg" >> $GITHUB_PATH

      - name: Install ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: ${{ matrix.name }}-Release-v1

      - name: Setup emsdk
        if: matrix.name == 'Emscripten'
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: latest

      - name: CMake configure
        run: >
          cmake
          -S .
          -B build
          -G "Ninja Multi-Config"
          -D CMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          -D VCPKG_TARGET_TRIPLET=${{ matrix.vcpkg_triplet }}

      - name: CMake build
        shell: bash
        run: cmake --build build --config Release
